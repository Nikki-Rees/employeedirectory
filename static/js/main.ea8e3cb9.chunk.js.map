{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/EmployeeTable/index.js","components/Search/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","EmployeeTable","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","employeeList","sort","a","b","key","direction","requestSort","useSortableData","getClassNamesFor","name","undefined","Table","striped","bordered","hover","variant","Button","onClick","map","employee","id","alt","src","image","occupation","location","SearchForm","Form","inline","htmlFor","FormControl","onChange","onSearch","value","search","type","placeholder","handleFormSubmit","App","Employees","setSearch","searchEmployees","filter","result","searchName","toLowerCase","includes","searchOccupation","searchLocation","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea8e3cb9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\nimport Table from 'react-bootstrap/table';\nimport Button from 'react-bootstrap/button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction useSortableData(employees, config = null) {\n\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n\n    let employeeList = [...employees];\n    if (sortConfig !== null) {\n      employeeList.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n\n      });\n    }\n    return employeeList;\n  }, [employees, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { employees: sortedItems, requestSort, sortConfig };\n\n};\n\n\n// const TableHeader = () => {\n//   return (\n//     <thead>\n//       <tr>\n//         <th>Image</th>\n//         <th>Name</th>\n//         <th>Occupation</th>\n//         <th>Location</th>\n\n//       </tr>\n//     </thead>\n//   )\n// };\n\n// const TableBody = (props) => {\n\n//   const rows = this.state.data.map((row, index) => {\n//     return (\n\n//       <tr key={index}>\n//         <td>\n//           <div className=\"img-container\">\n//             <img alt={row.name} src={row.image} />\n//           </div>\n//         </td>\n//         <td>{row.name}</td>\n//         <td>{row.occupation}</td>\n//         <td>{row.location}</td>\n//       </tr>\n//     )\n//   })\n\n//   return <tbody>{rows}</tbody>\n\n// };\n\nexport default function EmployeeTable(props) {\n\n  const { employees, requestSort, sortConfig } = useSortableData(props.employees);\n\n  function getClassNamesFor(name) {\n    if (!sortConfig) {\n      return\n    };\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n\n  };\n\n  return (\n    <Table striped bordered hover variant=\"dark\">\n\n      <thead>\n        <tr>\n          <th><Button onClick={() => requestSort(\"id\")}\n            className={getClassNamesFor(\"id\")}>ID</Button></th>\n          <th>Image</th>\n          <th>Name</th>\n          <th>Occupation</th>\n          <th><Button onClick={() => requestSort(\"location\")}\n            className={getClassNamesFor(\"location\")}>Location</Button></th>\n\n        </tr>\n      </thead>\n\n      <tbody>\n        {employees.map(employee => {\n          return (\n            <tr key={employee.id}>\n              <td>{employee.id}</td>\n              <td>\n                <div className=\"img-container\">\n                  <img alt={employee.name} src={employee.image} />\n                </div>\n              </td>\n              <td>{employee.name}</td>\n              <td>{employee.occupation}</td>\n              <td>{employee.location}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table >\n  );\n}\n\n\n","import React from \"react\";\nimport { Form, FormControl, Button } from 'react-bootstrap';\n\nexport default function SearchForm(props) {\n    return (\n        <div className=\"searchform\">\n            <Form inline>\n                <label htmlFor=\"search\">Search:</label>\n                <FormControl\n                    onChange={props.onSearch}\n                    value={props.search}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Search for name\"\n                    id=\"search\"\n                />\n                <Button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n                    Search\n        </Button>\n            </Form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Employees from \"./utils/employees.json\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport SearchForm from \"./components/Search\"\n\n\nexport default function App() {\n\n  const [employees] = React.useState(Employees);\n  const [search, setSearch] = React.useState(\"\");\n\n  const handleSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const searchEmployees = employees.filter(result => {\n    const searchName = result.name.toLowerCase().includes(search.toLowerCase());\n    const searchOccupation = result.occupation.toLowerCase().includes(search.toLowerCase());\n    const searchLocation = result.location.toLowerCase().includes(search.toLowerCase());\n    return searchName || searchOccupation || searchLocation\n  })\n\n  // Map over this.state.friends and render a FriendCard component for each employee object\n  return (\n\n    <Wrapper>\n      <Title>Employee Directory</Title>\n\n      <SearchForm onSearch={handleSearch} search={search} />\n      <EmployeeTable employees={searchEmployees} />\n\n\n    </Wrapper>\n  );\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n\n    <App />,\n\n    document.getElementById(\"root\")\n\n);\n"],"sourceRoot":""}